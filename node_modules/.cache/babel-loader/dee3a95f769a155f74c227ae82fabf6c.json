{"ast":null,"code":"import { int as _int, pad } from \"../utils\";\n\nvar doNothing = function doNothing() {\n  return undefined;\n};\n\nexport var monthToStr = function monthToStr(monthNumber, shorthand, locale) {\n  return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n};\nexport var revFormat = {\n  D: doNothing,\n  F: function F(dateObj, monthName, locale) {\n    dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n  },\n  G: function G(dateObj, hour) {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  H: function H(dateObj, hour) {\n    dateObj.setHours(parseFloat(hour));\n  },\n  J: function J(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  K: function K(dateObj, amPM, locale) {\n    dateObj.setHours(dateObj.getHours() % 12 + 12 * _int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n  },\n  M: function M(dateObj, shortMonth, locale) {\n    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n  },\n  S: function S(dateObj, seconds) {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  U: function U(_, unixSeconds) {\n    return new Date(parseFloat(unixSeconds) * 1000);\n  },\n  W: function W(dateObj, weekNum, locale) {\n    var weekNumber = parseInt(weekNum);\n    var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n    return date;\n  },\n  Y: function Y(dateObj, year) {\n    dateObj.setFullYear(parseFloat(year));\n  },\n  Z: function Z(_, ISODate) {\n    return new Date(ISODate);\n  },\n  d: function d(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  h: function h(dateObj, hour) {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  i: function i(dateObj, minutes) {\n    dateObj.setMinutes(parseFloat(minutes));\n  },\n  j: function j(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  l: doNothing,\n  m: function m(dateObj, month) {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  n: function n(dateObj, month) {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  s: function s(dateObj, seconds) {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  u: function u(_, unixMillSeconds) {\n    return new Date(parseFloat(unixMillSeconds));\n  },\n  w: doNothing,\n  y: function y(dateObj, year) {\n    dateObj.setFullYear(2000 + parseFloat(year));\n  }\n};\nexport var tokenRegex = {\n  D: \"\",\n  F: \"\",\n  G: \"(\\\\d\\\\d|\\\\d)\",\n  H: \"(\\\\d\\\\d|\\\\d)\",\n  J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n  K: \"\",\n  M: \"\",\n  S: \"(\\\\d\\\\d|\\\\d)\",\n  U: \"(.+)\",\n  W: \"(\\\\d\\\\d|\\\\d)\",\n  Y: \"(\\\\d{4})\",\n  Z: \"(.+)\",\n  d: \"(\\\\d\\\\d|\\\\d)\",\n  h: \"(\\\\d\\\\d|\\\\d)\",\n  i: \"(\\\\d\\\\d|\\\\d)\",\n  j: \"(\\\\d\\\\d|\\\\d)\",\n  l: \"\",\n  m: \"(\\\\d\\\\d|\\\\d)\",\n  n: \"(\\\\d\\\\d|\\\\d)\",\n  s: \"(\\\\d\\\\d|\\\\d)\",\n  u: \"(.+)\",\n  w: \"(\\\\d\\\\d|\\\\d)\",\n  y: \"(\\\\d{2})\"\n};\nexport var formats = {\n  Z: function Z(date) {\n    return date.toISOString();\n  },\n  D: function D(date, locale, options) {\n    return locale.weekdays.shorthand[formats.w(date, locale, options)];\n  },\n  F: function F(date, locale, options) {\n    return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n  },\n  G: function G(date, locale, options) {\n    return pad(formats.h(date, locale, options));\n  },\n  H: function H(date) {\n    return pad(date.getHours());\n  },\n  J: function J(date, locale) {\n    return locale.ordinal !== undefined ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n  },\n  K: function K(date, locale) {\n    return locale.amPM[_int(date.getHours() > 11)];\n  },\n  M: function M(date, locale) {\n    return monthToStr(date.getMonth(), true, locale);\n  },\n  S: function S(date) {\n    return pad(date.getSeconds());\n  },\n  U: function U(date) {\n    return date.getTime() / 1000;\n  },\n  W: function W(date, _, options) {\n    return options.getWeek(date);\n  },\n  Y: function Y(date) {\n    return pad(date.getFullYear(), 4);\n  },\n  d: function d(date) {\n    return pad(date.getDate());\n  },\n  h: function h(date) {\n    return date.getHours() % 12 ? date.getHours() % 12 : 12;\n  },\n  i: function i(date) {\n    return pad(date.getMinutes());\n  },\n  j: function j(date) {\n    return date.getDate();\n  },\n  l: function l(date, locale) {\n    return locale.weekdays.longhand[date.getDay()];\n  },\n  m: function m(date) {\n    return pad(date.getMonth() + 1);\n  },\n  n: function n(date) {\n    return date.getMonth() + 1;\n  },\n  s: function s(date) {\n    return date.getSeconds();\n  },\n  u: function u(date) {\n    return date.getTime();\n  },\n  w: function w(date) {\n    return date.getDay();\n  },\n  y: function y(date) {\n    return String(date.getFullYear()).substring(2);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}