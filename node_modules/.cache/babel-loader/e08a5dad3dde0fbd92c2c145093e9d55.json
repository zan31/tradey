{"ast":null,"code":"import jQuery from \"jquery\";\nimport \"jquery-ui/ui/widget\";\nimport I18n from \"./i18n\";\n\n(function ($) {\n  $.widget(\"ra.filteringMultiselect\", {\n    _cache: {},\n    options: {\n      createQuery: function createQuery(query) {\n        return {\n          query: query\n        };\n      },\n      sortable: false,\n      removable: true,\n      regional: {\n        add: \"Add\",\n        chooseAll: \"Choose all\",\n        clearAll: \"Clear all\",\n        down: \"Down\",\n        remove: \"Remove\",\n        search: \"Search\",\n        up: \"Up\"\n      },\n      searchDelay: 400,\n      remote_source: null,\n      xhr: false\n    },\n    wrapper: null,\n    filter: null,\n    collection: null,\n    addAll: null,\n    add: null,\n    remove: null,\n    up: null,\n    down: null,\n    selection: null,\n    removeAll: null,\n    _create: function _create() {\n      this._cache = {};\n\n      this._build();\n\n      this._buildCache();\n\n      this._bindEvents();\n    },\n    _build: function _build() {\n      var i;\n      this.wrapper = this.element.siblings('.ra-multiselect[data-input-for=\"' + this.element.attr(\"id\") + '\"]'); // Prevent duplication on browser back\n\n      if (this.wrapper.length > 0) {\n        this.filter = this.wrapper.find(\"input.ra-multiselect-search\");\n        this.collection = this.wrapper.find(\"select.ra-multiselect-collection\");\n        this.addAll = this.wrapper.find(\"a.ra-multiselect-item-add-all\");\n        this.add = this.wrapper.find(\"a.ra-multiselect-item-add\");\n        this.remove = this.wrapper.find(\"a.ra-multiselect-item-remove\");\n        this.up = this.wrapper.find(\"a.ra-multiselect-item-up\");\n        this.down = this.wrapper.find(\"a.ra-multiselect-item-down\");\n        this.selection = this.wrapper.find(\"select.ra-multiselect-selection\");\n        this.removeAll = this.wrapper.find(\"a.ra-multiselect-item-remove-all\");\n        return;\n      }\n\n      this.wrapper = $('<div class=\"ra-multiselect\">').attr(\"data-input-for\", this.element.attr(\"id\"));\n      this.wrapper.insertAfter(this.element);\n      var header = $('<div class=\"ra-multiselect-header\">');\n      this.filter = $('<input type=\"search\" placeholder=\"' + this.options.regional.search + '\" class=\"form-control ra-multiselect-search\"/>');\n      header.append(this.filter);\n      this.wrapper.append(header);\n      var columns = {\n        left: $('<div class=\"ra-multiselect-column ra-multiselect-left\">'),\n        center: $('<div class=\"ra-multiselect-column ra-multiselect-center\">'),\n        right: $('<div class=\"ra-multiselect-column ra-multiselect-right\">')\n      };\n\n      for (i in columns) {\n        if (columns.hasOwnProperty(i)) {\n          this.wrapper.append(columns[i]);\n        }\n      }\n\n      this.collection = $('<select multiple=\"multiple\"></select>');\n      this.collection.addClass(\"form-control ra-multiselect-collection\");\n      this.addAll = $('<a href=\"#\" class=\"ra-multiselect-item-add-all\"><span class=\"fas fa-chevron-circle-right\"></span>' + this.options.regional.chooseAll + \"</a>\");\n      columns.left.html(this.collection).append(this.addAll);\n      this.collection.wrap('<div class=\"wrapper\"/>');\n      this.add = $('<a href=\"#\" class=\"fas fa-chevron-circle-right ra-multiselect-item-add\"></a>').attr(\"title\", this.options.regional.add);\n      columns.center.append(this.add);\n\n      if (this.options.removable) {\n        this.remove = $('<a href=\"#\" class=\"fas fa-chevron-circle-left ra-multiselect-item-remove\"></a>').attr(\"title\", this.options.regional.remove);\n        columns.center.append(this.remove);\n      }\n\n      if (this.options.sortable) {\n        this.up = $('<a href=\"#\" class=\"fas fa-chevron-circle-up ra-multiselect-item-up\">' + this.options.regional.up + \"</a>\");\n        this.down = $('<a href=\"#\" class=\"fas fa-chevron-circle-down ra-multiselect-item-down\">' + this.options.regional.down + \"</a>\");\n        columns.center.append(this.up).append(this.down);\n      }\n\n      this.selection = $('<select class=\"form-control ra-multiselect-selection\" multiple=\"multiple\"></select>');\n      columns.right.append(this.selection);\n\n      if (this.options.removable) {\n        this.removeAll = $('<a href=\"#\" class=\"ra-multiselect-item-remove-all\"><span class=\"fas fa-chevron-circle-left\"></span>' + this.options.regional.clearAll + \"</a>\");\n        columns.right.append(this.removeAll);\n      }\n\n      this.selection.wrap('<div class=\"wrapper\"/>');\n      this.element.css({\n        display: \"none\"\n      });\n      this.tooManyObjectsPlaceholder = $('<option disabled=\"disabled\" />').text(I18n.t(\"too_many_objects\"));\n      this.noObjectsPlaceholder = $('<option disabled=\"disabled\" />').text(I18n.t(\"no_objects\"));\n\n      if (this.options.xhr) {\n        this.collection.append(this.tooManyObjectsPlaceholder);\n      }\n    },\n    _bindEvents: function _bindEvents() {\n      var widget = this;\n      /* Add all to selection */\n\n      this.addAll.click(function (e) {\n        widget._select($(\"option:not(:disabled)\", widget.collection));\n\n        e.preventDefault();\n        widget.selection.trigger(\"change\");\n      });\n      /* Add to selection */\n\n      this.add.click(function (e) {\n        widget._select($(\":selected\", widget.collection));\n\n        e.preventDefault();\n        widget.selection.trigger(\"change\");\n      });\n\n      if (this.options.removable) {\n        /* Remove all from selection */\n        this.removeAll.click(function (e) {\n          widget._deSelect($(\"option\", widget.selection));\n\n          e.preventDefault();\n          widget.selection.trigger(\"change\");\n        });\n        /* Remove from selection */\n\n        this.remove.click(function (e) {\n          widget._deSelect($(\":selected\", widget.selection));\n\n          e.preventDefault();\n          widget.selection.trigger(\"change\");\n        });\n      }\n\n      var timeout = null;\n\n      if (this.options.sortable) {\n        /* Move selection up */\n        this.up.click(function (e) {\n          widget._move(\"up\", $(\":selected\", widget.selection));\n\n          e.preventDefault();\n        });\n        /* Move selection down */\n\n        this.down.click(function (e) {\n          widget._move(\"down\", $(\":selected\", widget.selection));\n\n          e.preventDefault();\n        });\n      }\n      /* Typing to the filter */\n\n\n      this.filter.bind(\"keyup click\", function (e) {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n\n        timeout = setTimeout(function () {\n          widget._queryFilter(widget.filter.val());\n        }, widget.options.searchDelay);\n      });\n    },\n    _queryFilter: function _queryFilter(val) {\n      var widget = this;\n\n      widget._query(val, function (matches) {\n        var filtered = [];\n        var i;\n\n        for (i = 0; i < matches.length; i++) {\n          if (!widget.selected(matches[i].id)) {\n            filtered.push(i);\n          }\n        }\n\n        if (filtered.length > 0) {\n          widget.collection.html(\"\");\n\n          for (i = 0; i < filtered.length; i++) {\n            var newOptions = $(\"<option></option>\").prop(\"value\", matches[filtered[i]].id).prop(\"title\", matches[filtered[i]].label).text(matches[filtered[i]].label);\n            widget.collection.append(newOptions);\n          }\n        } else {\n          widget.collection.html(widget.noObjectsPlaceholder);\n        }\n      });\n    },\n\n    /*\n     * Cache key is stored in the format `o_<option value>` to avoid JS\n     * engine coercing string keys to int keys, and thereby preserving\n     * the insertion order. The value for each key is in turn an object\n     * that stores the option tag's HTML text and the value. Example:\n     * cache = {\n     *    'o_271': { id: 271, value: 'CartItem #271'},\n     *    'o_270': { id: 270, value: 'CartItem #270'}\n     * }\n     */\n    _buildCache: function _buildCache(options) {\n      var widget = this;\n      this.element.find(\"option\").each(function (i, option) {\n        widget._cache[\"o_\" + option.value] = {\n          id: option.value,\n          value: $(option).text()\n        };\n\n        if (option.selected) {\n          $(option).clone().appendTo(widget.selection).prop(\"selected\", false).prop(\"title\", $(option).text());\n        } else {\n          $(option).clone().appendTo(widget.collection).prop(\"selected\", false).prop(\"title\", $(option).text());\n        }\n      });\n    },\n    _deSelect: function _deSelect(options) {\n      var widget = this;\n      options.each(function (i, option) {\n        widget.element.find('option[value=\"' + option.value + '\"]').prop(\"selected\", false);\n      });\n      $(options).appendTo(this.collection).prop(\"selected\", false);\n    },\n    _query: function _query(query, success) {\n      var i,\n          matches = [];\n\n      if (query === \"\") {\n        if (!this.options.xhr) {\n          for (i in this._cache) {\n            if (this._cache.hasOwnProperty(i)) {\n              var option = this._cache[i];\n              matches.push({\n                id: option.id,\n                label: option.value\n              });\n            }\n          }\n\n          success.apply(this, [matches]);\n        } else {\n          this.collection.html(this.tooManyObjectsPlaceholder);\n        }\n      } else {\n        if (this.options.xhr) {\n          $.ajax({\n            beforeSend: function beforeSend(xhr) {\n              xhr.setRequestHeader(\"Accept\", \"application/json\");\n            },\n            url: this.options.remote_source,\n            data: this.options.createQuery(query),\n            success: success\n          });\n        } else {\n          query = new RegExp(query + \".*\", \"i\");\n\n          for (i in this._cache) {\n            if (this._cache.hasOwnProperty(i) && query.test(this._cache[i][\"value\"])) {\n              var option = this._cache[i];\n              matches.push({\n                id: option.id,\n                label: option.value\n              });\n            }\n          }\n\n          success.apply(this, [matches]);\n        }\n      }\n    },\n    _select: function _select(options) {\n      var widget = this;\n      options.each(function (i, option) {\n        var el = widget.element.find('option[value=\"' + option.value + '\"]');\n\n        if (el.length) {\n          el.prop(\"selected\", true);\n        } else {\n          widget.element.append($(\"<option></option>\").prop(\"value\", option.value).prop(\"selected\", true));\n        }\n      });\n      $(options).appendTo(this.selection).prop(\"selected\", false);\n    },\n    _move: function _move(direction, options) {\n      var widget = this;\n\n      if (direction == \"up\") {\n        options.each(function (i, option) {\n          var prev = $(option).prev();\n\n          if (prev.length > 0) {\n            var el = widget.element.find('option[value=\"' + option.value + '\"]');\n            var el_prev = widget.element.find('option[value=\"' + prev[0].value + '\"]');\n            el_prev.before(el);\n            prev.before($(option));\n          }\n        });\n      } else {\n        $.fn.reverse = [].reverse; // needed to lower last items first\n\n        options.reverse().each(function (i, option) {\n          var next = $(option).next();\n\n          if (next.length > 0) {\n            var el = widget.element.find('option[value=\"' + option.value + '\"]');\n            var el_next = widget.element.find('option[value=\"' + next[0].value + '\"]');\n            el_next.after(el);\n            next.after($(option));\n          }\n        });\n      }\n    },\n    selected: function selected(value) {\n      if (this.selection[0].querySelectorAll('option[value=\"' + value + '\"]')[0]) {\n        return true;\n      }\n    },\n    destroy: function destroy() {\n      this.wrapper.remove();\n      this.element.css({\n        display: \"inline\"\n      });\n      $.Widget.prototype.destroy.apply(this, arguments);\n    }\n  });\n})(jQuery);","map":null,"metadata":{},"sourceType":"module"}