{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*!\n * chartjs-adapter-date-fns v2.0.0\n * https://www.chartjs.org\n * (c) 2021 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse as _parse, parseISO, isValid, format as _format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\nvar FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns',\n  // DEBUG\n  formats: function formats() {\n    return FORMATS;\n  },\n  parse: function parse(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    var type = _typeof(value);\n\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = _parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n\n    return isValid(value) ? value.getTime() : null;\n  },\n  format: function format(time, fmt) {\n    return _format(time, fmt, this.options);\n  },\n  add: function add(time, amount, unit) {\n    switch (unit) {\n      case 'millisecond':\n        return addMilliseconds(time, amount);\n\n      case 'second':\n        return addSeconds(time, amount);\n\n      case 'minute':\n        return addMinutes(time, amount);\n\n      case 'hour':\n        return addHours(time, amount);\n\n      case 'day':\n        return addDays(time, amount);\n\n      case 'week':\n        return addWeeks(time, amount);\n\n      case 'month':\n        return addMonths(time, amount);\n\n      case 'quarter':\n        return addQuarters(time, amount);\n\n      case 'year':\n        return addYears(time, amount);\n\n      default:\n        return time;\n    }\n  },\n  diff: function diff(max, min, unit) {\n    switch (unit) {\n      case 'millisecond':\n        return differenceInMilliseconds(max, min);\n\n      case 'second':\n        return differenceInSeconds(max, min);\n\n      case 'minute':\n        return differenceInMinutes(max, min);\n\n      case 'hour':\n        return differenceInHours(max, min);\n\n      case 'day':\n        return differenceInDays(max, min);\n\n      case 'week':\n        return differenceInWeeks(max, min);\n\n      case 'month':\n        return differenceInMonths(max, min);\n\n      case 'quarter':\n        return differenceInQuarters(max, min);\n\n      case 'year':\n        return differenceInYears(max, min);\n\n      default:\n        return 0;\n    }\n  },\n  startOf: function startOf(time, unit, weekday) {\n    switch (unit) {\n      case 'second':\n        return startOfSecond(time);\n\n      case 'minute':\n        return startOfMinute(time);\n\n      case 'hour':\n        return startOfHour(time);\n\n      case 'day':\n        return startOfDay(time);\n\n      case 'week':\n        return startOfWeek(time);\n\n      case 'isoWeek':\n        return startOfWeek(time, {\n          weekStartsOn: +weekday\n        });\n\n      case 'month':\n        return startOfMonth(time);\n\n      case 'quarter':\n        return startOfQuarter(time);\n\n      case 'year':\n        return startOfYear(time);\n\n      default:\n        return time;\n    }\n  },\n  endOf: function endOf(time, unit) {\n    switch (unit) {\n      case 'second':\n        return endOfSecond(time);\n\n      case 'minute':\n        return endOfMinute(time);\n\n      case 'hour':\n        return endOfHour(time);\n\n      case 'day':\n        return endOfDay(time);\n\n      case 'week':\n        return endOfWeek(time);\n\n      case 'month':\n        return endOfMonth(time);\n\n      case 'quarter':\n        return endOfQuarter(time);\n\n      case 'year':\n        return endOfYear(time);\n\n      default:\n        return time;\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}